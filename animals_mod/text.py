main_menu = ['Главное меню:',
             'Открыть файл реестра',
             # 'Сохранить файл' - реализован вариант автосохранения,
             'Показать реестр животных c фильтром по дате',
             'Показать все записи реестра (посмотреть навыки животных)',
             'Показать запись реестра по номеру ID (посмотреть навыки выбранного животного)',
             'Внести запись в реестр (добавить животное)',
             'Найти информацию о животном по любому полю (название, содержание, дата)',
             'Изменить информацию о животном (обучить новым командам)',
             'Удалить информацию о животном (удалить животное)',
             'Выход']

select_menu = 'Выберите пункт меню: '

input_error = f'Ошибка ввода. Введите число от 1 от {len(main_menu) - 1}: '

new_note = {'name': 'Введите тип животного (cat, dog, hamster, horse, camel, donkey): ',
               'type': 'Введите команды, которые умеет делать животное: ',
               'create_time': 'автоматический ввод даты и времени'}

empty_reestr = 'Реестр животных не содержит записей или не открыт'

load_successful = 'Реестр успешно загружен!'
save_successful = 'Реестр успешно сохранен!'
error_load = 'Ошибка загрузки реестра! Файл отсутствует! Введите первую запись в реестр для создания файла.'
error_save = 'Ошибка сохранения реестра!'


def add_successful(name: str) -> str:
    return f'Информация по животному "{name}" успешно добавлена в реестр!'


search_word = 'Введите строку для поиска: '


def empty_search(word: str) -> str:
    return f'Информация по животному содержащая "{word}" не найдена'


input_chgindex = 'Введите ID животного, информацию по которому хотите изменить: '
input_delindex = 'Введите ID животного, информацию по которому хотите удалить: '
input_note_index = 'Введите ID животного, информацию по которому хотите просмотреть: '
input_start_date = 'Введите начало периода для фильтрации в формате "YYYY-MM-DD HH:MM:SS": '
input_end_date = 'Введите начало периода для фильтрации в формате "YYYY-MM-DD HH:MM:SS": '

changed_note = 'Информация по животному успешно изменена'

deleted_note = 'Информация о животном успешно удалено из реестра'
error_deleted = 'Ошибка удаления, животное с указанным номером отсутствует в реестре!'
error_changed = 'Ошибка изменения, животное с указанным номером отсутствует в реестре!'
error_message = 'Информация о запрошенном животном отсутствует в реестре!'

exit_message = 'До новых встреч!'


def del_successful(name: str) -> str:
    return f'Информация о животном "{name}" успешно удалена из реестра!'


def change_successful(name: str) -> str:
    return f'Информация о животном "{name}" успешно изменена в реестре!'
